{"version":3,"sources":["logo.svg","components/Rest.js","App.js","reportWebVitals.js","index.js"],"names":["Rest","props","state","error","isLoaded","items","appName","version","fetch","then","res","json","result","setState","this","message","React","Component","App","className","src","logo","alt","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kMAAe,G,MAAA,IAA0B,kC,2CCEpBA,E,kDACnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,MAAO,KACPC,UAAU,EACVC,MAAO,GACPC,QAAQ,GACRC,QAAQ,IAPO,E,qDAWnB,WAAqB,IAAD,OAClBC,MAAM,UACHC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MACC,SAACG,GACC,EAAKC,SAAS,CACZT,UAAU,EAEVE,QAASM,EAAON,QAChBC,QAASK,EAAOL,aAMpB,SAACJ,GACC,EAAKU,SAAS,CACZT,UAAU,EACVD,e,oBAMV,WACE,MAA6CW,KAAKZ,MAA1CC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,SAAUE,EAAzB,EAAyBA,QAAQC,EAAjC,EAAiCA,QACjC,OAAIJ,EACK,0CAAaA,EAAMY,WAChBX,EAIR,gCACE,gCAAK,oDAA6B,+BAAOE,OACzC,gCAAK,2CAAoB,+BAAOC,UAL7B,iD,GAzCqBS,IAAMC,WCiBzBC,MAff,WAEE,OACE,qBAAKC,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SACzC,sCACO,8CADP,0BAGD,cAAC,EAAD,UCDQC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.de21bd23.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\n\nexport default class Rest extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: [],\n      appName:'',\n      version:''\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"/rest/\")\n      .then(res => res.json())\n      .then(\n        (result) => {\n          this.setState({\n            isLoaded: true,\n//            items: result.items,\n            appName: result.appName,\n            version: result.version\n          });\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      )\n  }\n\n  render() {\n    const { error, isLoaded, appName,version } = this.state;\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <div>Loading...</div>;\n    } else {\n      return (\n        <div>\n          <div><span>Application Name</span><span>{appName}</span></div>\n          <div><span>Version</span><span>{version}</span></div>\n        </div>\n        // <ul>\n        //   {items.map(item => (\n        //     <li key={item.id}>\n        //       {item.name} {item.price}\n        //     </li>\n        //   ))}\n        // </ul>\n      );\n    }\n  }\n  \n}","import logo from './logo.svg';\nimport './App.css';\nimport Rest from './components/Rest'\n\nfunction App() {\n  const elem = <Rest></Rest>\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n       <Rest></Rest>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}